diff a/gdb/python/py-symtab.c b/gdb/python/py-symtab.c	(rejected hunks)
@@ -140,7 +136,7 @@ stpy_get_producer (PyObject *self, void *closure)
     {
       const char *producer = COMPUNIT_PRODUCER (cust);
 
-      return host_string_to_python_string (producer);
+      return host_string_to_python_string (producer).release ();
     }
 
   Py_RETURN_NONE;
@@ -223,25 +219,23 @@ stpy_get_linetable (PyObject *self, PyObject *args)
 static PyObject *
 salpy_str (PyObject *self)
 {
-  char *s;
   const char *filename;
   sal_object *sal_obj;
-  PyObject *result;
   struct symtab_and_line *sal = NULL;
 
   SALPY_REQUIRE_VALID (self, sal);
 
   sal_obj = (sal_object *) self;
-  filename = (sal_obj->symtab == (symtab_object *) Py_None)
-    ? "<unknown>" : symtab_to_filename_for_display (sal_obj->symtab->symtab);
-
-  s = xstrprintf ("symbol and line for %s, line %d", filename,
-		  sal->line);
-
-  result = PyString_FromString (s);
-  xfree (s);
+  if (sal_obj->symtab == Py_None)
+    filename = "<unknown>";
+  else
+    {
+      symtab *symtab = symtab_object_to_symtab (sal_obj->symtab);
+      filename = symtab_to_filename_for_display (symtab);
+    }
 
-  return result;
+  return PyString_FromFormat ("symbol and line for %s, line %d", filename,
+			      sal->line);
 }
 
 static void
@@ -333,9 +327,10 @@ salpy_dealloc (PyObject *self)
 
   if (self_sal->prev)
     self_sal->prev->next = self_sal->next;
-  else if (self_sal->symtab != (symtab_object * ) Py_None)
-    set_objfile_data (SYMTAB_OBJFILE (self_sal->symtab->symtab),
-		      salpy_objfile_data_key, self_sal->next);
+  else if (self_sal->symtab != Py_None)
+    set_objfile_data
+      (SYMTAB_OBJFILE (symtab_object_to_symtab (self_sal->symtab)),
+       salpy_objfile_data_key, self_sal->next);
 
   if (self_sal->next)
     self_sal->next->prev = self_sal->prev;
@@ -365,7 +360,7 @@ set_sal (sal_object *sal_obj, struct symtab_and_line sal)
     }
   else
     {
-      symtab_obj = (symtab_object *) Py_None;
+      symtab_obj = Py_None;
       Py_INCREF (Py_None);
     }
 
@@ -377,16 +372,17 @@ set_sal (sal_object *sal_obj, struct symtab_and_line sal)
 
   /* If the SAL does not have a symtab, we do not add it to the
      objfile cleanup observer linked list.  */
-  if (sal_obj->symtab != (symtab_object *)Py_None)
+  if (sal_obj->symtab != Py_None)
     {
+      symtab *symtab = symtab_object_to_symtab (sal_obj->symtab);
+
       sal_obj->next
-	= ((struct salpy_sal_object *)
-	   objfile_data (SYMTAB_OBJFILE (sal_obj->symtab->symtab),
-			 salpy_objfile_data_key));
+	= ((struct salpy_sal_object *) objfile_data (SYMTAB_OBJFILE (symtab),
+						     salpy_objfile_data_key));
       if (sal_obj->next)
 	sal_obj->next->prev = sal_obj;
 
-      set_objfile_data (SYMTAB_OBJFILE (sal_obj->symtab->symtab),
+      set_objfile_data (SYMTAB_OBJFILE (symtab),
 			salpy_objfile_data_key, sal_obj);
     }
   else
@@ -501,8 +497,8 @@ del_objfile_sal (struct objfile *objfile, void *datum)
     {
       sal_object *next = obj->next;
 
-      Py_DECREF (obj->symtab);
-      obj->symtab = (symtab_object *) Py_None;
+      gdbpy_ref<> tmp (obj->symtab);
+      obj->symtab = Py_None;
       Py_INCREF (Py_None);
 
       obj->next = NULL;
